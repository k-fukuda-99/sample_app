<h1>新規投稿</h1>

<!-- バリデーションによるエラーメッセージを表示する-->
<!-- errorsは、モデルにバリデーションをかけたときに、発生したエラーの内容を確認できるメソッドです。
any? と組み合わせることで、エラーが発生しているかどうかを判定できます。
また、full_messagesと組み合わせることで、エラーの内容を出力できます。 エラー文は配列で保存されているため、eachを使います。-->
<% if @list.errors.any? %>
  <%= @list.errors.count %>件のエラーが発生しました
  <ul>
    <% @list.errors.full_messages.each do |message| %>
      <li><%= message %></li>
    <% end %>
  </ul>
<% end %>

<!-- form_with model:の後にurl: method:の場合は省略ではなく厳密な記述となるこの2つのオプションを使用することで
どのURLへどのHTTPメソッドで送信するかを厳密にしているすることでができる -->
<%= form_with model: @list, url: '/lists', method: :post do |f| %>
  <h4>タイトル</h4>
  <%= f.text_field :title %>

  <h4>本文</h4>
  <%= f.text_area :body %>

  <!-- ファイルの投稿をするためのフィールドなので、画像ファイル以外の全てのファイル(音声ファイルや動画ファイルなど)も投稿できる
  今回は、accept: "image/*"を使い、画像ファイルしか投稿できないようにする-->
  <h4>画像</h4>
  <%= f.file_field :image, accept: "image/*" %>

  <%= f.submit '投稿' %>
<% end %>
